@model IEnumerable<MovieCyrine.Models.Film>

@{
    ViewBag.Title = "Index";
}
<label>Total de genre:</label>  @ViewBag.Totalgenre


<h2>Liste des films</h2>

@using (Html.BeginForm())
{
    @*Un seul bouton pour les deux recherches*@
    <table>
        <tr>
            <td>
                <div>

                    Recherche par genre: @Html.TextBox("searchString")
                    Recherche par Prix:  @Html.TextBox("x")
                    @*filtrage avec dropdowlist*@
                    @Html.DropDownList("filtre", (SelectList)ViewData["filtre"], "---- SVP selectionnez----", new { htmlAttributes = new { @class = "form-control" } })


                </div>
            </td>
            <td> <input type="submit" value="Rechercher" id="recherche" /> </td>
        </tr>
       
    </table>
    @*2 boutons pour les deux recherches*@
  @* <table>
        <tr>
            <td>
                <div>

                    Recherche par genre: @Html.TextBox("searchString")

                </div>
            </td>
            <td> <input type="submit" value="Rechercher" id="recherche" /> </td>
        </tr>
        <tr>
            <td>
                <div>

                    Recherche par prix: @Html.TextBox("x")
                </div>
            </td>
            <td> <input type="submit" value="Rechercher" id="recherche" /> </td>
        </tr>
    </table>
@*

@*filtre avec dropdownlist*@
   @*
    @Html.DropDownList("filtre", (SelectList)ViewData["filtre"], "---- SVP selectionnez----", new { htmlAttributes = new { @class = "form-control" } })
    <input type="submit" value="Rechercher" id="recherche" />
   *@
}
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Titre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Prix)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Avis)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImageUrl)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProducteurId)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Titre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReleaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Prix)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Avis)
        </td>
       @* <td>
        @Html.DisplayFor(modelItem => item.ImageUrl)
    </td>*@
        <td>
            @*recuperer l'image*@
            @{string path = "~/Content/Upload/" + @item.ImageUrl ;}
            @*enlever label for pour afficher seulement l'image*@
            <img src="@Url.Content(path)" width="50" height="50" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProducteurId)
        </td>
        <td>
            @Html.ActionLink("CeateMovie", "../Movie/Create", new { id = item.Id }) |

            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
